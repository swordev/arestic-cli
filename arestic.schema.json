{
  "$schema": "http://json-schema.org/draft-07/schema",
  "title": "ARestic",
  "definitions": {
    "stringList": {
      "type": "array",
      "items": {
        "type": "string"
      }
    },
    "glob-options": {
      "type": "object",
      "properties": {
        "patterns": {
          "anyOf": [
            {
              "type": "string"
            },
            {
              "$ref": "#/definitions/stringList"
            }
          ]
        },
        "deep": {
          "type": "integer",
          "description": "Specifies the maximum depth of a read directory relative to the start directory",
          "default": -1
        },
        "followSymbolicLinks": {
          "type": "boolean",
          "description": "Indicates whether to traverse descendants of symbolic link directories",
          "default": true
        },
        "ignore": {
          "$ref": "#/definitions/stringList",
          "description": "An array of glob patterns to exclude matches. This is an alternative way to use negative patterns"
        },
        "markDirectories": {
          "type": "boolean",
          "description": "Mark the directory path with the final slash",
          "default": true
        },
        "onlyDirectories": {
          "type": "boolean",
          "description": "Return only directories",
          "default": false
        },
        "onlyFiles": {
          "type": "boolean",
          "description": "Return only files",
          "default": true
        },
        "braceExpansion": {
          "type": "boolean",
          "description": "Enables Bash-like brace expansion",
          "default": true
        },
        "caseSensitiveMatch": {
          "type": "boolean",
          "description": "Enables a case-sensitive mode for matching files",
          "default": true
        },
        "dot": {
          "type": "boolean",
          "description": "Allow patterns to match entries that begin with a period (.)",
          "default": false
        },
        "extglob": {
          "type": "boolean",
          "description": "Enables Bash-like extglob functionality",
          "default": true
        },
        "globstar": {
          "type": "boolean",
          "description": "Enables recursively repeats a pattern containing **. If false, ** behaves exactly like *",
          "default": true
        },
        "baseNameMatch": {
          "type": "boolean",
          "description": "If set to true, then patterns without slashes will be matched against the basename of the path if it contains slashes",
          "default": false
        }
      }
    },
    "env": {
      "type": "object",
      "properties": {
        "RESTIC_REPOSITORY": {
          "type": "string",
          "description": "Location of repository (replaces -r)"
        },
        "RESTIC_PASSWORD_FILE": {
          "type": "string",
          "description": "Location of password file (replaces --password-file)"
        },
        "RESTIC_PASSWORD": {
          "type": "string",
          "description": "The actual password for the repository"
        },
        "RESTIC_PASSWORD_COMMAND": {
          "type": "string",
          "description": "Command printing the password for the repository to stdout"
        },
        "RESTIC_KEY_HINT": {
          "type": "string",
          "description": "ID of key to try decrypting first, before other keys"
        },
        "RESTIC_CACHE_DIR": {
          "type": "string",
          "description": "Location of the cache directory"
        },
        "RESTIC_PROGRESS_FPS": {
          "type": "string",
          "description": "Frames per second by which the progress bar is updated"
        },
        "TMPDIR": {
          "type": "string",
          "description": "Location for temporary files"
        },
        "AWS_ACCESS_KEY_ID": {
          "type": "string",
          "description": "Amazon S3 access key ID"
        },
        "AWS_SECRET_ACCESS_KEY": {
          "type": "string",
          "description": "Amazon S3 secret access key"
        },
        "AWS_DEFAULT_REGION": {
          "type": "string",
          "description": "Amazon S3 default region"
        },
        "ST_AUTH": {
          "type": "string",
          "description": "Auth URL for keystone v1 authentication"
        },
        "ST_USER": {
          "type": "string",
          "description": "Username for keystone v1 authentication"
        },
        "ST_KEY": {
          "type": "string",
          "description": "Password for keystone v1 authentication"
        },
        "OS_AUTH_URL": {
          "type": "string",
          "description": "Auth URL for keystone authentication"
        },
        "OS_REGION_NAME": {
          "type": "string",
          "description": "Region name for keystone authentication"
        },
        "OS_USERNAME": {
          "type": "string",
          "description": "Username for keystone authentication"
        },
        "OS_USER_ID": {
          "type": "string",
          "description": "User ID for keystone v3 authentication"
        },
        "OS_PASSWORD": {
          "type": "string",
          "description": "Password for keystone authentication"
        },
        "OS_TENANT_ID": {
          "type": "string",
          "description": "Tenant ID for keystone v2 authentication"
        },
        "OS_TENANT_NAME": {
          "type": "string",
          "description": "Tenant name for keystone v2 authentication"
        },
        "OS_USER_DOMAIN_NAME": {
          "type": "string",
          "description": "User domain name for keystone authentication"
        },
        "OS_USER_DOMAIN_ID": {
          "type": "string",
          "description": "User domain ID for keystone v3 authentication"
        },
        "OS_PROJECT_NAME": {
          "type": "string",
          "description": "Project name for keystone authentication"
        },
        "OS_PROJECT_DOMAIN_NAME": {
          "type": "string",
          "description": "Project domain name for keystone authentication"
        },
        "OS_PROJECT_DOMAIN_ID": {
          "type": "string",
          "description": "Project domain ID for keystone v3 authentication"
        },
        "OS_TRUST_ID": {
          "type": "string",
          "description": "Trust ID for keystone v3 authentication"
        },
        "OS_APPLICATION_CREDENTIAL_ID": {
          "type": "string",
          "description": "Application Credential ID (keystone v3)"
        },
        "OS_APPLICATION_CREDENTIAL_NAME": {
          "type": "string",
          "description": "Application Credential Name (keystone v3)"
        },
        "OS_APPLICATION_CREDENTIAL_SECRET": {
          "type": "string",
          "description": "Application Credential Secret (keystone v3)"
        },
        "OS_STORAGE_URL": {
          "type": "string",
          "description": "Storage URL for token authentication"
        },
        "OS_AUTH_TOKEN": {
          "type": "string",
          "description": "Auth token for token authentication"
        },
        "B2_ACCOUNT_ID": {
          "type": "string",
          "description": "Account ID or applicationKeyId for Backblaze B2"
        },
        "B2_ACCOUNT_KEY": {
          "type": "string",
          "description": "Account Key or applicationKey for Backblaze B2"
        },
        "AZURE_ACCOUNT_NAME": {
          "type": "string",
          "description": "Account name for Azure"
        },
        "AZURE_ACCOUNT_KEY": {
          "type": "string",
          "description": "Account key for Azure"
        },
        "GOOGLE_PROJECT_ID": {
          "type": "string",
          "description": "Project ID for Google Cloud Storage"
        },
        "GOOGLE_APPLICATION_CREDENTIALS": {
          "type": "string",
          "description": "Application Credentials for Google Cloud Storage (e.g. $HOME/.config/gs-secret-restic-key.json)"
        },
        "RCLONE_BWLIMIT": {
          "type": "string",
          "description": "rclone bandwidth limit"
        }
      }
    },
    "global-options-cli": {
      "type": "object",
      "properties": {
        "cacert": {
          "type": "string",
          "description": "file to load root certificates from (default: use system certificates)"
        },
        "cache-dir": {
          "type": "string",
          "description": "set the cache directory. (default: use system default cache directory)"
        },
        "cleanup-cache ": {
          "type": "boolean",
          "description": "auto remove old cache directories"
        },
        "json": {
          "type": "boolean",
          "description": "set output mode to JSON for commands that support it"
        },
        "key-hint": {
          "type": "string",
          "description": "key ID of key to try decrypting first (default: $RESTIC_KEY_HINT)"
        },
        "limit-download": {
          "type": "integer",
          "description": "limits downloads to a maximum rate in KiB/s. (default: unlimited)"
        },
        "limit-upload": {
          "type": "integer",
          "description": "limits uploads to a maximum rate in KiB/s. (default: unlimited)"
        },
        "no-cache": {
          "type": "boolean",
          "description": "do not use a local cache"
        },
        "no-lock": {
          "type": "boolean",
          "description": "do not lock the repo, this allows some operations on read-only repos"
        },
        "option": {
          "$ref": "#/definitions/stringList",
          "description": "set extended option (key=value, can be specified multiple times)"
        },
        "password-command": {
          "type": "string",
          "description": "specify a shell command to obtain a password (default: $RESTIC_PASSWORD_COMMAND)"
        },
        "password-file": {
          "type": "string",
          "description": "read the repository password from a file (default: $RESTIC_PASSWORD_FILE)"
        },
        "quiet": {
          "type": "boolean",
          "description": "do not output comprehensive progress report"
        },
        "repo": {
          "type": "string",
          "description": "repository to backup to or restore from (default: $RESTIC_REPOSITORY)"
        },
        "tls-client-cert": {
          "type": "string",
          "description": "path to a file containing PEM encoded TLS client certificate and private key"
        },
        "verbose": {
          "type": "integer",
          "description": "be verbose (specify --verbose multiple times or level n)"
        }
      }
    },
    "backup-options-cli": {
      "type": "object",
      "properties": {
        "exclude": {
          "$ref": "#/definitions/stringList",
          "description": "exclude a pattern (can be specified multiple times)"
        },
        "exclude-caches": {
          "type": "boolean",
          "description": "excludes cache directories that are marked with a CACHEDIR.TAG file. See http://bford.info/cachedir/spec.html for the Cache Directory Tagging Standard"
        },
        "exclude-file": {
          "$ref": "#/definitions/stringList",
          "description": "read exclude patterns from a file (can be specified multiple times)"
        },
        "exclude-if-present": {
          "type": "string",
          "description": "takes filename[:header], exclude contents of directories containing filename (except filename itself) if header of that file is as provided (can be specified multiple times)"
        },
        "files-from": {
          "type": "string",
          "description": "read the files to backup from file (can be combined with file args/can be specified multiple times)"
        },
        "force": {
          "type": "boolean",
          "description": "force re-reading the target files/directories (overrides the \"parent\" flag)"
        },
        "host": {
          "type": "string",
          "description": "set the hostname for the snapshot manually. To prevent an expensive rescan use the \"parent\" flag"
        },
        "iexclude": {
          "$ref": "#/definitions/stringList",
          "description": "same as --exclude but ignores the casing of filenames"
        },
        "ignore-inode": {
          "type": "boolean",
          "description": "ignore inode number changes when checking for modified files"
        },
        "one-file-system": {
          "type": "boolean",
          "description": "exclude other file systems"
        },
        "parent": {
          "type": "string",
          "description": "use this parent snapshot (default: last snapshot in the repo that has the same target files/directories)"
        },
        "tag": {
          "$ref": "#/definitions/stringList",
          "description": "add a tag for the new snapshot (can be specified multiple times)"
        },
        "time": {
          "type": "string",
          "description": "time of the backup (ex. '2012-11-01 22:08:41') (default: now)"
        },
        "with-atime": {
          "type": "boolean",
          "description": "store the atime for all files and directories"
        }
      }
    },
    "repository": {
      "type": "object",
      "additionalProperties": false,
      "properties": {
        "name": {
          "type": "string"
        },
        "env": {
          "$ref": "#/definitions/env"
        },
        "backend": {
          "type": "string",
          "enum": ["local", "rest", "sftp", "s3", "azure", "gs", "rclone"]
        },
        "extends": {
          "type": "string"
        },
        "protocol": {
          "enum": ["http", "https"]
        },
        "host": {
          "type": "string"
        },
        "username": {
          "type": "string"
        },
        "password": {
          "type": "string"
        },
        "passwordPath": {
          "type": "string"
        },
        "port": {
          "type": "integer"
        },
        "path": {
          "type": "string"
        }
      }
    },
    "backup": {
      "type": "object",
      "additionalProperties": false,
      "properties": {
        "name": {
          "type": "string"
        },
        "env": {
          "$ref": "#/definitions/env"
        },
        "repositories": {
          "$ref": "#/definitions/stringList"
        },
        "snapshotByPath": {
          "type": "boolean"
        },
        "pathGlobs": {
          "type": "array",
          "items": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "$ref": "#/definitions/glob-options"
              }
            ]
          }
        },
        "paths": {
          "$ref": "#/definitions/stringList"
        },
        "password": {
          "type": "string"
        },
        "passwordPath": {
          "type": "string"
        },
        "globalOptions": {
          "$ref": "#/definitions/global-options-cli"
        },
        "options": {
          "$ref": "#/definitions/backup-options-cli"
        }
      }
    }
  },
  "type": "object",
  "properties": {
    "repositories": {
      "type": ["object", "array"],
      "items": {
        "$ref": "#/definitions/repository"
      },
      "patternProperties": {
        ".+": {
          "$ref": "#/definitions/repository"
        }
      }
    },
    "backups": {
      "type": ["object", "array"],
      "items": {
        "$ref": "#/definitions/backup"
      },
      "patternProperties": {
        ".+": {
          "$ref": "#/definitions/backup"
        }
      }
    }
  }
}
